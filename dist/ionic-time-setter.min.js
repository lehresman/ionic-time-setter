/**
 * Ionic Time Setter v1.0.1, by Luke Ehresman
 * MIT License
 * http://github.com/lehresman/ionic-time-setter
 */
!function(t){"use strict";t.filter("lpad",function(){return function(t){return("00"+t).slice(-2)}}),t.factory("TimeSetter",["$rootScope","$ionicPopup","$filter",function(t,n,o){function e(n){return n||(n={}),b=n.onSet,c=t.$new(),c.startHour=n.startHour||0,c.startMinute=n.startMinute||0,c.startAmpm=n.startHour>=12?"PM":"AM",c.title=n.title||"Set a time",c.cancelText=n.cancelText||"Cancel",c.cancelClass=n.cancelClass||"button-clear button-dark",c.setText=n.setText||"Set Time",c.setClass=n.setClass||"button-positive",c.input={},r(),c.selection={hour:c.startHour,minute:c.startMinute,ampm:c.startAmpm},c.reset=r,c.keyPressed=i,c.toggleAmpm=s,c.setFocus=l,c}function i(t){return":"==t?(c.input.position="afterColon",void(c.input.clearValue=!0)):("beforeColon"==c.input.position?(c.input.clearValue&&(c.input.beforeColon=""),c.input.beforeColon=""+parseInt(o("lpad")(c.input.beforeColon+t)),c.input.beforeColonError=!1):(c.input.clearValue&&(c.input.afterColon=""),c.input.afterColon=""+parseInt(o("lpad")(c.input.afterColon+t)),c.input.afterColonError=!1),c.input.clearValue=!1,clearTimeout(a),void(a=setTimeout(function(){c.input.clearValue=!0,c.$apply()},1500)))}function l(t){"beforeColon"==t?(c.input.position="beforeColon",c.input.clearValue=!0):"afterColon"==t&&(c.input.position="afterColon",c.input.clearValue=!0)}function r(){c.input.beforeColon=parseInt(c.startHour),c.input.afterColon=o("lpad")(c.startMinute),c.input.ampm=c.startAmpm,c.input.position="beforeColon",c.input.clearValue=!0,c.input.beforeColonError=!1,c.input.afterColonError=!1}function u(t){var n=parseInt(c.input.beforeColon),o=parseInt(c.input.afterColon);return(n<1||n>12)&&(c.input.beforeColonError=!0),(o<0||o>59)&&(c.input.afterColonError=!0),c.input.beforeColonError||c.input.afterColonError?void t.preventDefault():void(b&&("AM"==c.input.ampm?12==n&&(n=0):"PM"==c.input.ampm&&n<12&&(n+=12),b(n,o)))}function s(){"AM"==c.input.ampm?c.input.ampm="PM":c.input.ampm="AM"}var c,a,b;return{show:function(t){var o=e(t),i=n.show({templateUrl:"time-setter.html",title:o.title,scope:o,buttons:[{text:o.cancelText,type:o.cancelClass},{text:o.setText,type:o.setClass,onTap:u}]});i.then(function(t){})}}}])}(angular.module("ionic-time-setter",["ionic"])),angular.module("ionic-time-setter").run(["$templateCache",function(t){t.put("time-setter.html",'<div class="ionic-time-setter"><style>.ionic-time-setter .label .time {\n      font-size: 32px;\n      font-weight: bold;\n      line-height: 45px;\n    }\n    .ionic-time-setter .row {\n      padding: 0;\n      margin: 0;\n    }\n    .ionic-time-setter .col {\n      padding: 3px;\n      margin: 0;\n    }\n    .ionic-time-setter .button {\n      margin: 0;\n      padding-left: 0;\n      padding-right: 0;\n    }\n    .ionic-time-setter .ion-ios-refresh-outline:before {\n      font-size: 32px;\n    }\n    .ionic-time-setter hr {\n      border: 0;\n      border-top: 1px solid #ddd;\n    }\n    .ionic-time-setter .input-focus {\n      text-decoration: underline;\n    }\n    .ionic-time-setter .not-clearing {\n      background-color: #ddd;\n    }\n    .ionic-time-setter .error {\n      color: #c00;\n    }</style><div class="row year label"><div class="col col-60 text-right time" style="padding-right:20px"><strong><span ng-click="setFocus(\'beforeColon\')" ng-class="{\n              \'error\': input.beforeColonError,\n              \'input-focus\': input.position==\'beforeColon\',\n              \'not-clearing\': input.position==\'beforeColon\' && !input.clearValue\n            }">{{ input.beforeColon }}</span>:<span ng-click="setFocus(\'afterColon\')" ng-class="{\n              \'error\': input.afterColonError,\n              \'input-focus\': input.position==\'afterColon\',\n              \'not-clearing\': input.position==\'afterColon\' && !input.clearValue\n            }">{{ input.afterColon | lpad }}</span> </strong></div><div class="col col-40" ng-click=""><button class="button button-dark button-outline button-block" ng-click="toggleAmpm()">{{ input.ampm }}</button></div></div><hr><div class="keypad"><div class="row"><div class="col col-33"><button class="button button-dark button-outline button-block" ng-click="keyPressed(\'1\')">1</button></div><div class="col col-33"><button class="button button-dark button-outline button-block" ng-click="keyPressed(\'2\')">2</button></div><div class="col col-33"><button class="button button-dark button-outline button-block" ng-click="keyPressed(\'3\')">3</button></div></div><div class="row"><div class="col col-33"><button class="button button-dark button-outline button-block" ng-click="keyPressed(\'4\')">4</button></div><div class="col col-33"><button class="button button-dark button-outline button-block" ng-click="keyPressed(\'5\')">5</button></div><div class="col col-33"><button class="button button-dark button-outline button-block" ng-click="keyPressed(\'6\')">6</button></div></div><div class="row"><div class="col col-33"><button class="button button-dark button-outline button-block" ng-click="keyPressed(\'7\')">7</button></div><div class="col col-33"><button class="button button-dark button-outline button-block" ng-click="keyPressed(\'8\')">8</button></div><div class="col col-33"><button class="button button-dark button-outline button-block" ng-click="keyPressed(\'9\')">9</button></div></div><div class="row"><div class="col col-33"><button class="button button-dark button-outline button-block" ng-click="keyPressed(\':\')">:</button></div><div class="col col-33"><button class="button button-dark button-outline button-block" ng-click="keyPressed(\'0\')">0</button></div><div class="col col-33"><button class="button button-dark button-outline button-block" ng-click="reset()"><i class="ion ion-ios-refresh-outline"></i></button></div></div></div></div>')}]);